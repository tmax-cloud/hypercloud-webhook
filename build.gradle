/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
	
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.3.1'
  	compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.google.guava:guava:27.0.1-jre'
	compile 'com.googlecode.json-simple:json-simple:1.1'
	compile 'org.nanohttpd:nanohttpd:2.3.1'
	compile 'org.nanohttpd:nanohttpd-nanolets:2.3.1'
	compile 'org.glassfish:javax.json:1.1.4'
	compile 'com.flipkart.zjsonpatch:zjsonpatch:0.2.1'
	compile 'com.squareup.okhttp:okhttp:2.7.5'
	compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'com.github.java-json-tools:json-patch:1.11'
	compile 'mysql:mysql-connector-java:5.1.6'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}



task doBuild {
	dependsOn "makeJar"
	dependsOn "copyDependencies"
	dependsOn "copyStartShell"
	dependsOn "copyLogbackConfig"
}

task deleteDir(type: Delete) {
    delete "build/hypercloud4-webhook"
}
    
task makeJar(type: Jar) {
    archiveName "hypercloud4-webhook.jar"
    destinationDir = file("build/hypercloud4-webhook/lib")

    from(sourceSets.main.output.classesDirs) {
        include("**")
    }
    manifest {
        attributes 'Main-Class': 'k8s.example.client.Main'
        attributes "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
    }
}

task copyDependencies(type: Copy) {
	from configurations.compile
	into "build/hypercloud4-webhook/lib"
}

task copyStartShell(type: Copy) {
	from "start.sh"
	into "build"
}

task copyLogbackConfig(type: Copy) {
	from '_logback'
	into 'build/hypercloud4-webhook'
}


